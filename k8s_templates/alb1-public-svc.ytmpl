---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: ${ENV_NAME}-${NSPACE}-${APP_NAME}-ingress
  namespace: ${NSPACE}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: $(f_ssm_get_parameter "${AWS_SSM_BASE_PATH}/${NSPACE}/infra/certs/${AWS_DEFAULT_REGION}/1/arn")
    alb.ingress.kubernetes.io/auth-session-cookie: ${DNS_NAME_FQDN}-cookie
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60,deregistration_delay.timeout_seconds=30,slow_start.duration_seconds=0
    alb.ingress.kubernetes.io/security-groups: $(f_ssm_get_parameter "${AWS_SSM_BASE_PATH}/infra/vpc/security-group/adminaccess/id"), $(f_ssm_get_parameter "${AWS_SSM_BASE_PATH}/infra/vpc/security-group/officeaccess/id"), $(f_ssm_get_parameter "${AWS_SSM_BASE_PATH}/infra/vpc/security-group/route53-health-checkers/id"), $(f_ssm_get_parameter  "${AWS_SSM_BASE_PATH}/infra/vpc/security-group/alb1/id")
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/load-balancer-attributes: 'routing.http2.enabled=true,idle_timeout.timeout_seconds=600,deletion_protection.enabled=false'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: /health.html
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '8'
    alb.ingress.kubernetes.io/success-codes: 200-301
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/group.name: ${NSPACE}
    alb.ingress.kubernetes.io/group.order: '$(echo "${NSPACE}" | sed 's/[^0-9]*//g' | sed 's/^0*//')'
    alb.ingress.kubernetes.io/tags: Environment=${ENV_TYPE},Name=${ENV_NAME}-${NSPACE}-${APP_NAME},NameSpace=${NSPACE}
    external-dns.alpha.kubernetes.io/hostname: app-http-content-from-git.${DNS_NAME_FQDN}
    external-dns.alpha.kubernetes.io/ttl: '900'
  labels:
    app: ${ENV_NAME}-${NSPACE}-${APP_NAME}
spec:
  rules:
  # app-http-content-from-git
  - host: "app-http-content-from-git.${DNS_NAME_FQDN}"
    http:
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - path: /*
        backend:
          serviceName: "${ENV_NAME}-${NSPACE}-app-http-content-from-git-svc"
          servicePort: $(f_ssm_get_parameter "${AWS_SSM_CONF_PATH}/app-http-content-from-git/port")
---
